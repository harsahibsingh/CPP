//Print Divisors : Efficient Solution
//Idea: Based on two points:
//1. Divisors occur in pairs
//2. One of the divisors in every pair is smaller than or equal to √n
//Time Complexity : O(√n)
//Auxillary Space : O(1)


#include <iostream>
using namespace std;

void PrintDivisors(int num)
{
    int i=0;
    
    for(i=1;i*i<num;i++) //Print all divisors from from 1(inclusive) to √n (exclusive)
    {
        if(num%i == 0)
        {
            cout<<i<<" ";
        }
        
    }
    
    for(;i>=1;i--)  //Print all divisors from from √n(inclusive) to n (inclusive)
    {
        if(num%i == 0)
        {
            cout<<num/i<<" ";
        }
        
    }
    
}

int main()
{
    int num=0;
    
    cout<<"Enter number to print its Divisors: ";
    cin>>num;
    
    PrintDivisors(num);
    

    return 0;
}
