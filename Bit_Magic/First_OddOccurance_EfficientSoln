/*

One Odd Occurring Number
       or 
First Odd Occurring Number

Efficient Solution:

Time Complexity: O(n)
Aux space: O(1)



Idea:

Bitwise XOR properties:
    
        x ^ 0 = x 
        x ^ y = y ^ x
        x ^ (y  ^ z) = (x ^  y) ^ z (Associative Property)
        x ^ x = 0 
        
     Odd times     x ^ x ^ x = x
     Even times    x ^ x ^ x ^ x  = 0
        

*/

#include<iostream>

using namespace std;

int Find1stOdd(int arr[], int size)
{
    
    int res = arr[0];
    
    for(int i=1;i<size;i++)
    {
        res=res^arr[i];
    }
    
    return res;
}


int main()
{
    int size;
    int arr[100]={};
    int res;
    
    cout<<"Enter the size of array: "<<endl;
    cin >>size;
    
    cout<<"Enter Array Elements: "<<endl;
    
    for(int i=0;i<size;i++)
    {
        cin>>arr[i];
    }
    
    res = Find1stOdd(arr, size);
    
    if(res==0)
    {
        cout<<"No Odd occurance element exist in array ";
    }
    else
    {
        cout<<"First Odd occurance element is: "<<res;
    }
    
    return 0;
}

