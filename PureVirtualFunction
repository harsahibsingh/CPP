#include<iostream>

class Base
{
    public:
    
    virtual void Display() =0; //pure virtual function
};

class Derived:public Base
{
    public:
    
    void Display()
    {
        std::cout<<"Derived class Display Function"<<std::endl;
    }
};

int main()
{
   // Base obj;
    //obj.Display();
    
    //error: cannot declare variable ‘obj’ to be of abstract type ‘Base’
    
    Derived obj;
    obj.Display();
    
    //Derived class Display Function
    
    return 0;
}
